From c56dc42fcb667ff5383fbc96801173a068957b66 Mon Sep 17 00:00:00 2001
From: Morten Rasmussen <morten.rasmussen@arm.com>
Date: Thu, 14 Apr 2016 08:39:45 +0100
Subject: [PATCH 61/78] sched/fair: Fix select_task_rq_brute rcu_unlock when
 !sd

To be merged with original patch
---
 kernel/sched/fair.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/fair.c b/kernel/sched/fair.c
index 6982f68..fcc42f4 100644
--- a/kernel/sched/fair.c
+++ b/kernel/sched/fair.c
@@ -5785,7 +5785,7 @@ static int select_energy_cpu_brute(struct task_struct *p, int prev_cpu)
 	sd = rcu_dereference(per_cpu(sd_ea, prev_cpu));
 
 	if (!sd)
-		return prev_cpu;
+		goto unlock;
 
 	for_each_cpu_and(i, tsk_cpus_allowed(p), sched_domain_span(sd)) {
 		int diff;
@@ -5818,6 +5818,7 @@ static int select_energy_cpu_brute(struct task_struct *p, int prev_cpu)
 		}
 	}
 
+unlock:
 	rcu_read_unlock();
 
 	if (energy_cpu == prev_cpu && !cpu_overutilized(prev_cpu))
-- 
2.7.4

